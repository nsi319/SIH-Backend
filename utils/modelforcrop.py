# -*- coding: utf-8 -*-
"""modelForCrop.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gg-_nU8cBfJ2jEnR5jBy0TaUl4IzOSnX
"""

import numpy as np
import keras
import tensorflow as tf
from keras import backend as K
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.models import model_from_json
import os
PROJECT_PATH = os.path.abspath(os.path.dirname(__name__))
K.clear_session()

def prediction(input_value):
    
    input_list=[]
    input_list.append(input_value['year'])
    input_list.append(input_value['month'])
    input_list.append(input_value['rainfall']) #rainfall value
    if(input_value['mandi']=="Indore"):
        input_list.append(1)
        input_list.append(0)
    if(input_value['mandi']=="Jabalpur"):
        input_list.append(0)
        input_list.append(1)
    print(input_list)
    input_list = np.array(input_list)
    input_list = input_list.reshape( (1,5) )
    input_list = np.matrix(input_list)
    json_file = open(PROJECT_PATH + "/utils/model_json.json", 'r')
    loaded_model_json = json_file.read()
    json_file.close()

    # global graph
    # graph=tf.get_default_graph()
    loaded_model = model_from_json(loaded_model_json)
    loaded_model.load_weights(PROJECT_PATH + "/utils/pricemodel.h5")
    # with graph.as_default():
    loaded_model.compile(loss='mean_absolute_error', optimizer='adam', metrics=['mean_absolute_error'])

    values=loaded_model.predict(input_list)
    del input_list
    keras.backend.clear_session()
    print("predict: ",values)
    return values
